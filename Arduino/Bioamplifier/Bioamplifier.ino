int       emg;
int       y;
int       i;
int       offset;
String    plot;
byte      x;

void setup()
{
  ////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////// ADC ///////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////
  // ADC_sampling_rate = ADC_CLK/prescaler/ADC_conversion_clock_cycles.
  // For Arduino Uno, ADC_CLK is 16 MHz and a conversion takes 13 clock cycles.
  ADCSRA  = 0;                                                              // Clearing ADCSRA register...
  ADCSRB  = 0;                                                              // Clearing ADCSRB register...
  ADMUX  |= (0 & 0x07);                                                     // Setting A0 analog input pin...
  ADMUX  |= (1 << REFS0);                                                   // Setting reference voltage...
  ADMUX  |= (1 << ADLAR);                                                   // Left aligning ADC value to 8 bits from ADCH register...

  // 8x and 16x sets possible sampling rates, but to fast for Serial.write()
  //ADCSRA |= (1 << ADPS1) | (1 << ADPS0);                                  // Setting 8x  prescaler, for ADC_sampling_rate = 153.8 kHz...
  //ADCSRA |= (1 << ADPS2);                                                 // Setting 16x prescaler, for ADC_sampling_rate = 76.9 kHz...
  
  ADCSRA |= (1 << ADPS2) | (1 << ADPS0);                                    // Setting 32x prescaler, for ADC_sampling_rate = 38.5 kHz...
  ADCSRA |= (1 << ADATE);                                                   // Enabling auto trigger...
  ADCSRA |= (1 << ADIE);                                                    // Enabling interrupts when the measurement is complete...
  ADCSRA |= (1 << ADEN);                                                    // Enabling ADC...
  ADCSRA |= (1 << ADSC);                                                    // Starting ADC measurements...

  ////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////  PWM ///////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////
  TCCR2A = 0x23;                                                            // Setting “pin high on overflow” and “clear on compare match with OCR2B"...
  TCCR2B = 0x09;                                                            // Setting F_CLK = 16MHz, prescaler = 1x...
  OCR2A = 104;                                                              // Setting F_PWM = F_CLK/(prescaler*overflow_value)... 
  pinMode(3, OUTPUT);                                                       // Enabling PWM output on pin 3...
  
  i = 0;
  Serial.begin(2000000);
}

ISR(ADC_vect)
{
  x = ADCH;                                                                 // Reading 8 bit value from ADC...
  Serial.write(x);                                                          // Writing ADC value to serial port...
  i++;
  i = i%104;
  OCR2B = x-150;
}

void loop()
{
}


void serialEvent()
{
  char sampling_rate;
  
  while(Serial.available())
  {
    sampling_rate = Serial.read();
  }

  switch(sampling_rate)
  {
    case '1':
      ADCSRA  = 0;                                                          // Clearing ADCSRA register...
      ADCSRA |= (1 << ADPS2) | (1 << ADPS0);                                // Setting 32x prescaler, for ADC_sampling_rate = 38.5 kHz...
      ADCSRA |= (1 << ADATE);                                               // Enabling auto trigger...
      ADCSRA |= (1 << ADIE);                                                // Enabling interrupts when the measurement is complete...
      ADCSRA |= (1 << ADEN);                                                // Enabling ADC...
      ADCSRA |= (1 << ADSC);                                                // Starting ADC measurements...
      break;
    case '2':
      ADCSRA  = 0;                                                          // Clearing ADCSRA register...
      ADCSRA |= (1 << ADPS2) | (1 << ADPS1);                                // Setting 64x prescaler, for ADC_sampling_rate = 19.2 kHz...
      ADCSRA |= (1 << ADATE);                                               // Enabling auto trigger...
      ADCSRA |= (1 << ADIE);                                                // Enabling interrupts when the measurement is complete...
      ADCSRA |= (1 << ADEN);                                                // Enabling ADC...
      ADCSRA |= (1 << ADSC);                                                // Starting ADC measurements...
      break;
    case '3':
      ADCSRA  = 0;                                                          // Clearing ADCSRA register...
      ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);                 // Setting 128x prescaler, for ADC_sampling_rate = 9.6 kHz...
      ADCSRA |= (1 << ADATE);                                               // Enabling auto trigger...
      ADCSRA |= (1 << ADIE);                                                // Enabling interrupts when the measurement is complete...
      ADCSRA |= (1 << ADEN);                                                // Enabling ADC...
      ADCSRA |= (1 << ADSC);                                                // Starting ADC measurements...
      break;
  }
}
